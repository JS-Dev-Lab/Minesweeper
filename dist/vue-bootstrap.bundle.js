(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{10:function(t,e,n){var a=n(23);"string"==typeof a&&(a=[[t.i,a,""]]),a.locals&&(t.exports=a.locals);(0,n(26).default)("432e0328",a,!1,{})},22:function(t,e,n){"use strict";var a=n(10);n.n(a).a},23:function(t,e,n){(t.exports=n(24)(!1)).push([t.i,"\nhtml {\r\n  height: 100%;\n}\nbody {\r\n  height: 100%;\r\n  overflow: hidden;\n}\r\n",""])},4:function(t,e,n){"use strict";n.r(e);var a=n(18);function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function i(t,e){for(var n=0;n<e.length;n++){var a=e[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}function o(t,e,n){return e&&i(t.prototype,e),n&&i(t,n),t}a.a.config.productionTip=!1;var s=function(){function t(e,n){r(this,t),this._selector=e,this._App=n}return o(t,[{key:"initialRender",value:function(t){var e=this._App,n=new a.a({render:function(t){return t(e,{props:{state:this.state}})},data:{state:t},methods:{update:function(t){t(this.state)}}}).$mount(this._selector);return new u(n)}}]),t}(),u=function(){function t(e){r(this,t),this._vueInstance=e}return o(t,[{key:"update",value:function(t){return this._vueInstance.update(t),this}}]),t}(),c=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{attrs:{id:"app"}},[n("h1",[t._v("Hello "+t._s(t.state.name))]),t._v(" "),n("input",{domProps:{value:t.state.name},on:{input:t.setName}}),t._v(" "),n("p",[t._v(t._s(t.length))]),t._v(" "),n("p",[t._v(t._s(t.state.count))]),n("button",{on:{click:t.state.commands.add}},[t._v("My button")])])};c._withStripped=!0;var p={props:{state:{type:Object,required:!0}},name:"app",methods:{setName:function(t){this.state.commands.setName(t.target.value)}},computed:{length:function(){return this.state.name.length}}},l=(n(22),n(25)),f=Object(l.a)(p,c,[],!1,null,null,null);f.options.__file="src/frameworks/vue/App.vue";var h=f.exports;n.d(e,"engine",(function(){return v}));var v=new s("#app",h)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,